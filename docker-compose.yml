version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: bharatmesh-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: bharatmesh
      MONGO_INITDB_ROOT_PASSWORD: bharatmesh123
      MONGO_INITDB_DATABASE: bharatmesh
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - bharatmesh-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (for Bull queues)
  redis:
    image: redis:7-alpine
    container_name: bharatmesh-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bharatmesh-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bharatmesh-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGO_URI: mongodb://bharatmesh:bharatmesh123@mongodb:27017/bharatmesh?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-change-me-in-production}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-change-me-refresh}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-change-encryption-key-32-chars}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:5173}
    ports:
      - "5000:5000"
      - "6000:6000" # Sync server
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/uploads:/app/uploads
    networks:
      - bharatmesh-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (Development - Vite dev server)
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: bharatmesh-frontend-dev
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:5000/api
      VITE_SOCKET_URL: http://localhost:5000
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - bharatmesh-network
    profiles:
      - dev

  # Frontend (Production - Nginx serving built assets)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bharatmesh-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - bharatmesh-network
    profiles:
      - prod

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  redis_data:
    driver: local

networks:
  bharatmesh-network:
    driver: bridge

